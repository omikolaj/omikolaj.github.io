---
layout: post
title:  "Variable? What do you mean an empty container?"
date:   2017-09-23 18:07:23 +0000
---

The very first time I wanted to learn coding sparked from a conversation I had with my friend. It was around the time when Apple announced their new programming language called "Swift". Hanging out we were just bouncing ideas off each other about how "cool" it would be to create our own iOS app. I remember how exciting it was going into details and functionality of what our app would perform. Back then, I remember thinking, that coming up with the "big picture" idea wasn't the hard part, it was knowing the right tools to execute it. Since we had no idea how to begin writing our own app, we started up by meeting couple times a week and looking up YouTube tutorials for Swift. The learning curve for learning programming from scratch is huge. However, when you are completely “green” to coding without any guidance or idea where to start the "coding" mountain seems unsurmountable. No wonder why our fiery passion to learn how to code died off only after about .... two weeks? The first and impossible (at the time) concept to understand was a simple definition of a variable. The definition we had was that a "Variable is an empty container" ok??. This did not, in any form answer any of our questions. We had more questions that we would ask ourselves like “What is the container for? What will it hold?”. Most of the answers we found were already more technical than we could handle.

Few months went by and I remember learning something about myself that will shape my future. I kept having, I guess you could call it "curiosity cravings". I wanted to know how stuff works. How is it possible that with a bunch of transistors on a processor chip with gates that open and close, you can control the flow of electrons and it all somehow lead up to allowing you to play "Skyrim"? How is it possible that all the transistors work gets turned into 0s and 1s and allows us to pretty much do anything we want? What bothered me, was that myself as the "end-user" I was limited to experiencing technology to what someone else has created for me. In another word, I was only the consumer and that was the end of it. I could not sit down and create something because I simply did not know how. Sitting at work in sales, performing the same repetitive job repeatedly felt extremely stagnating. The more time had passed the deeper the feeling of my career becoming stale has gotten. Reaching the tipping point, I told myself I would do whatever it took to learn how to be code and develop. After all, there were many other people who knew how to do that so what was so special about them and what was stopping me? The answer was me. It was my fixed believes that I had to go to a four-year college, I had to have a gift for it and it’s just too difficult. Knowing that I must peruse my calling to let me inner innovator express himself prompted me to being working toward my goal. I knew I had to have a job and a career that continuously challenged me, made me think outside of the box and always had something new to offer.

At this point I still didn’t know what a variable was. A friend of mine tried to explain it to me as best as he could and some of the questions I had were. "What type of container? I know it's empty but what will it hold?" to which he replied "Anything". This is quite funny when you think about it since that is correct but it of course did not answer my question at all, it actually confused me even more. I summarized my definition of variable as "An empty container or a bucket, that can hold anything you specify?" he said yes! That is exactly it. This was about two hours into this conversation and endless examples, so the definition of a variable was stuck in my head as a sentence which I could not relate to or comprehend but could simply spit out as something I had memorized. I think best way to learn something is to actually use it and play with it. After writing few very basic lines of code I started to get a basic understanding of the role of a variable and everything started to make sense. I used this tiny insight into the world of coding as a springboard for motivation and inspiration to being learning a programming language with 100% commitment. 

After 4 months of daily self-paced online courses, books and tutorial videos my friend mentioned Flatiron School to me. This was exactly what I was looking for. Self-paced online course with a structured curriculum with a heavy focus on understanding coding in the deep sense. The course does not require you to take any pre-requisites classes, it just gets to the actual mechanics of how it all works! I am super excited to be where I am today. Every day I look forward to hitting that "Next Lesson" button to see what other lessons have to offer. 






